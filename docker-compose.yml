version: '2.1'
services:
  psql:
    build:
      context: .
      dockerfile: ./sbin/docker/dev.psql.dockerfile
    ports:
      - 7000:5432

  nsqlookup:
    image: nsqio/nsq
    hostname: nsqlookup
    ports:
      - 4160:4160
      - 4161:4161
    command: /nsqlookupd

  nsqd:
    image: nsqio/nsq
    ports:
      - 4150:4150
      - 4151:4151
    links:
      - nsqlookup:nsqlookup
    command: /nsqd --lookupd-tcp-address=nsqlookup:4160

  nsqadmin:
    image: nsqio/nsq
    links:
      - nsqlookup:nsqlookup
    ports:
      - 4171:4171
    command: /nsqadmin --lookupd-http-address=nsqlookup:4161

  redis_master:
    image: redis:3.0-alpine
    ports:
      - 7100:6379

  redis_slave:
    image: redis:3.0-alpine

  sentinel:
    image: s7anley/redis-sentinel-docker
    environment:
      - MASTER_NAME=dev
      - QUORUM=1
      - MASTER=redis_master
      - SLAVES=redis_slave
    ports:
      - 26379:26379
    depends_on:
      - redis_master
      - redis_slave

  elasticsearch:
    build:
      context: ./sbin/docker/
      dockerfile: ./dev.elasticsearch.v5.4.dockerfile
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 1g
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  api:
    image: golang-learn:base
    build:
      context: ./sbin/docker/
      dockerfile: ./base-alpine.dockerfile
    command: run ./bin/main.go
    volumes:
      - .:/go/src/golang-learn
    ports:
      - 8080:8080
    environment:
      - env=dev
    depends_on:
      - elasticsearch

  cassandra-1:
    hostname: cassandra-1
    image: cassandra:latest
    command: /bin/bash -c "sleep 1 && echo ' -- Pausing to let system catch up ... -->' && /docker-entrypoint.sh cassandra -f"
    expose:
      - 7000
      - 7001
      - 7199
      - 9042
      - 9160
    # volumes: # uncomment if you desire mounts, also uncomment cluster.sh
    #   - ./data/cassandra-1:/var/lib/cassandra:rw

  cassandra-2:
    hostname: cassandra-2
    image: cassandra:latest
    command: /bin/bash -c "sleep 30 && echo ' -- Pausing to let system catch up ... -->' && /docker-entrypoint.sh cassandra -f"
    environment:
      - CASSANDRA_SEEDS=cassandra-1
    links:
      - cassandra-1
    expose:
      - 7000
      - 7001
      - 7199
      - 9042
      - 9160
    # volumes: # uncomment if you desire mounts, also uncomment cluster.sh
    #   - ./data/cassandra-2:/var/lib/cassandra:rw

volumes:
  esdata1:
    driver: local
